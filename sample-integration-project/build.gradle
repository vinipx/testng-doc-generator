plugins {
    id 'java'
    id 'application'
}

group = 'io.vinipx.sample'
version = '1.0-SNAPSHOT'
sourceCompatibility = '11'
targetCompatibility = '11'

repositories {
    mavenCentral()
    mavenLocal() // For local testing
    maven { url 'https://jitpack.io' } // Use JitPack repository
}

dependencies {
    // Use the TestNG Documentation Generator from local project
    implementation files('../build/libs/testng-doc-generator-1.3.6.jar')
    
    // Alternatively, use from local Maven repository or JitPack
    // implementation 'io.vinipx:testng-doc-generator:1.3.6'
    // implementation 'com.github.vinipx:testng-doc-generator:v1.3.6'
    
    // FreeMarker for template processing
    implementation 'org.freemarker:freemarker:2.3.32'
    
    // Reflections for classpath scanning
    implementation 'org.reflections:reflections:0.10.2'
    
    // JavaParser for parsing Java source code
    implementation 'com.github.javaparser:javaparser-core:3.25.5'
    
    // TestNG for running tests (needed by the main code as well)
    implementation 'org.testng:testng:7.7.1'
}

application {
    mainClass = 'io.vinipx.sample.GenerateDocumentation'
}

test {
    useTestNG() {
        suites file('src/test/resources/testng.xml')
        outputDirectory = file("$buildDir/test-output")
    }
    testLogging {
        events "PASSED", "FAILED", "SKIPPED"
    }
}

// Add a task to run the documentation generator
tasks.register('generateDocs', JavaExec) {
    group = 'documentation'
    description = 'Generate TestNG documentation'
    classpath = sourceSets.main.runtimeClasspath
    mainClass = 'io.vinipx.sample.GenerateDocumentation'
    
    doFirst {
        println "Generating TestNG documentation..."
    }
}

// Add a task to run tests and then generate documentation
tasks.register('runTestsAndGenerateDocs') {
    group = 'documentation'
    description = 'Run tests and then generate documentation'
    dependsOn test, generateDocs
}

// Add a task to generate documentation using source directories
tasks.register('generateDocsFromSource', JavaExec) {
    group = 'documentation'
    description = 'Generate TestNG documentation from source directories'
    classpath = sourceSets.main.runtimeClasspath + sourceSets.test.runtimeClasspath
    mainClass = 'io.vinipx.sample.GenerateDocumentationFromSource'
    
    doFirst {
        println "Generating TestNG documentation from source directories..."
    }
}
