plugins {
    id 'java-library'
    id 'application'
}

group = 'io.vinipx'
version = '1.0.5'
sourceCompatibility = '11'
targetCompatibility = '11'

repositories {
    mavenCentral()
}

dependencies {
    // TestNG
    api 'org.testng:testng:7.7.1'
    
    // Reflection utilities
    implementation 'org.reflections:reflections:0.10.2'
    
    // JavaParser for analyzing test method logic
    implementation 'com.github.javaparser:javaparser-symbol-solver-core:3.25.5'
    
    // For generating HTML reports
    implementation 'org.freemarker:freemarker:2.3.32'
    
    // JUnit for testing
    testImplementation 'junit:junit:4.13.2'
}

// Main application configuration
application {
    mainClass = 'io.vinipx.testngdoc.TestNGDocGenerator'
}

// Task to generate documentation for sample test classes
task generateDocs(type: JavaExec) {
    group = 'Documentation'
    description = 'Generates documentation for sample test classes'
    
    classpath = sourceSets.main.runtimeClasspath + sourceSets.test.runtimeClasspath
    mainClass = 'io.vinipx.testngdoc.TestNGDocGeneratorTest'
}

// Task to generate documentation for a specific directory
task generateDocsFromDir(type: JavaExec) {
    group = 'Documentation'
    description = 'Generates documentation from a specified source directory'
    
    classpath = sourceSets.main.runtimeClasspath
    mainClass = 'io.vinipx.testngdoc.RunDocGenerator'
    
    // Default source directory if none provided
    args = [project.hasProperty('sourceDir') ? project.getProperty('sourceDir') : 'src/test/java/com/testngdoc/sample']
}

// Task to run the unit tests
task runUnitTests(type: Test) {
    group = 'Verification'
    description = 'Runs the unit tests for the TestNGDocGenerator'
    
    testClassesDirs = sourceSets.test.output.classesDirs
    classpath = sourceSets.test.runtimeClasspath
    
    // Include only the unit test classes
    include '**/TestNGDocGeneratorUnitTest.class'
    include '**/SimpleTestNGDocGeneratorUnitTest.class'
    
    // Show test results in the console
    testLogging {
        events "passed", "skipped", "failed"
        exceptionFormat "full"
    }
}

// Task to demonstrate the pattern replacement feature
task demoPatternReplacement(type: JavaExec) {
    description 'Run the documentation generator to demonstrate pattern replacement'
    group 'demo'
    classpath = sourceSets.main.runtimeClasspath + sourceSets.test.runtimeClasspath
    mainClass = 'com.testngdoc.sample.GenerateDocumentation'
}

task demoTags(type: JavaExec) {
    description 'Run the documentation generator to demonstrate @Docs annotation tags'
    group 'demo'
    classpath = sourceSets.main.runtimeClasspath + sourceSets.test.runtimeClasspath
    mainClass = 'com.testngdoc.sample.GenerateDocumentation'
}

task runGenerator(type: JavaExec) {
    classpath = sourceSets.test.runtimeClasspath
    mainClass = 'com.testngdoc.sample.GenerateDocumentation'
}

// Task to demo all features
task demoAllFeatures(type: JavaExec) {
    classpath = sourceSets.test.runtimeClasspath
    main = 'com.testngdoc.sample.DemoAllFeatures'
}

// Configure the JAR
jar {
    manifest {
        attributes(
            'Main-Class': 'io.vinipx.testngdoc.TestNGDocGenerator',
            'Implementation-Title': 'TestNG Documentation Generator',
            'Implementation-Version': project.version
        )
    }
    
    // Include the templates directory in the JAR
    from('templates') {
        into 'templates'
    }
}
