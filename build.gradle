plugins {
    id 'java-library'
    id 'application'
    id 'maven-publish'
    id 'signing'  // Add signing plugin for Maven Central
}

group = 'io.vinipx'
version = '1.2.2'
sourceCompatibility = '11'
targetCompatibility = '11'

repositories {
    mavenCentral()
}

dependencies {
    // TestNG
    api 'org.testng:testng:7.7.1'
    
    // Reflection utilities
    implementation 'org.reflections:reflections:0.10.2'
    
    // JavaParser for analyzing test method logic
    implementation 'com.github.javaparser:javaparser-symbol-solver-core:3.25.5'
    
    // For generating HTML reports
    implementation 'org.freemarker:freemarker:2.3.32'
    
    // JUnit for testing
    testImplementation 'junit:junit:4.13.2'
}

// Handle duplicate resources
tasks.withType(Jar) {
    duplicatesStrategy = DuplicatesStrategy.INCLUDE
}

// Main application configuration
application {
    mainClass = 'io.vinipx.testngdoc.TestNGDocGenerator'
}

// Task to generate documentation for sample test classes
task generateDocs(type: JavaExec) {
    group = 'Documentation'
    description = 'Generates documentation for sample test classes'
    
    classpath = sourceSets.main.runtimeClasspath + sourceSets.test.runtimeClasspath
    mainClass = 'io.vinipx.testngdoc.TestNGDocGeneratorTest'
}

// Task to generate documentation for a specific directory
task generateDocsFromDir(type: JavaExec) {
    group = 'Documentation'
    description = 'Generates documentation from a specified source directory'
    
    classpath = sourceSets.main.runtimeClasspath
    mainClass = 'io.vinipx.testngdoc.RunDocGenerator'
    
    // Default source directory if none provided
    args = [project.hasProperty('sourceDir') ? project.getProperty('sourceDir') : 'src/test/java/com/testngdoc/sample']
}

// Task to run the unit tests
task runUnitTests(type: Test) {
    group = 'Verification'
    description = 'Runs the unit tests for the TestNGDocGenerator'
    
    testClassesDirs = sourceSets.test.output.classesDirs
    classpath = sourceSets.test.runtimeClasspath
    
    // Include only the unit test classes
    include '**/TestNGDocGeneratorUnitTest.class'
    include '**/SimpleTestNGDocGeneratorUnitTest.class'
    
    // Show test results in the console
    testLogging {
        events "passed", "skipped", "failed"
        exceptionFormat "full"
    }
}

// Task to demonstrate the pattern replacement feature
task demoPatternReplacement(type: JavaExec) {
    description 'Run the documentation generator to demonstrate pattern replacement'
    group 'demo'
    classpath = sourceSets.main.runtimeClasspath + sourceSets.test.runtimeClasspath
    mainClass = 'com.testngdoc.sample.GenerateDocumentation'
}

task demoTags(type: JavaExec) {
    description 'Run the documentation generator to demonstrate @Docs annotation tags'
    group 'demo'
    classpath = sourceSets.main.runtimeClasspath + sourceSets.test.runtimeClasspath
    mainClass = 'com.testngdoc.sample.GenerateDocumentation'
}

// Task to demonstrate multi-source directory scanning
task demoMultiSourceScanning(type: JavaExec) {
    description = 'Run the documentation generator to demonstrate multi-source directory scanning'
    group = 'Demo'
    classpath = sourceSets.main.runtimeClasspath
    mainClass = 'io.vinipx.testngdoc.RunDocGenerator'
    args = ['src/test/java', 'src/main/java']
}

// Task to demonstrate combined source directory and package scanning
task demoSourceAndPackageScanning(type: JavaExec) {
    description = 'Run the documentation generator to demonstrate combined source directory and package scanning'
    group = 'Demo'
    classpath = sourceSets.main.runtimeClasspath
    mainClass = 'io.vinipx.testngdoc.RunDocGenerator'
    args = ['src/test/java', '--package', 'com.testngdoc.sample']
}

// Task to test custom title and header
task testCustomTitle(type: JavaExec) {
    description = 'Test custom title and header in TestNGDocGenerator'
    group = 'Demo'
    classpath = sourceSets.test.runtimeClasspath
    mainClass = 'com.testngdoc.sample.CustomTitleTest'
}

task runGenerator(type: JavaExec) {
    classpath = sourceSets.test.runtimeClasspath
    mainClass = 'com.testngdoc.sample.GenerateDocumentation'
}

task demoAllFeatures(type: JavaExec) {
    classpath = sourceSets.test.runtimeClasspath
    main = 'com.testngdoc.sample.DemoAllFeatures'
}

// Configure Java artifacts
java {
    withJavadocJar()  // Generate Javadoc JAR
    withSourcesJar()  // Generate Sources JAR
}

// Configure the JAR
jar {
    manifest {
        attributes(
            'Main-Class': 'io.vinipx.testngdoc.TestNGDocGenerator',
            'Implementation-Title': 'TestNG Documentation Generator',
            'Implementation-Version': project.version
        )
    }
    
    // Include the templates directory in the JAR
    from('templates') {
        into 'templates'
    }
}

// Maven publication configuration for JitPack and Maven Central
publishing {
    publications {
        mavenJava(MavenPublication) {
            groupId = project.group
            artifactId = project.name
            version = project.version
            
            from components.java
            
            pom {
                name = 'TestNG Documentation Generator'
                description = 'A Java tool that generates comprehensive documentation for TestNG test classes'
                url = 'https://github.com/vinipx/testng-doc-generator'
                
                licenses {
                    license {
                        name = 'MIT License'
                        url = 'https://opensource.org/licenses/MIT'
                    }
                }
                
                developers {
                    developer {
                        id = 'vinipx'
                        name = 'vinipx'
                        email = 'vinipx@example.com'
                    }
                }
                
                scm {
                    connection = 'scm:git:git://github.com/vinipx/testng-doc-generator.git'
                    developerConnection = 'scm:git:ssh://github.com:vinipx/testng-doc-generator.git'
                    url = 'https://github.com/vinipx/testng-doc-generator/tree/main'
                }
            }
        }
    }
    
    // Add Maven Central repository
    repositories {
        maven {
            name = "OSSRH"
            def releasesRepoUrl = "https://s01.oss.sonatype.org/service/local/staging/deploy/maven2/"
            def snapshotsRepoUrl = "https://s01.oss.sonatype.org/content/repositories/snapshots/"
            url = version.endsWith('SNAPSHOT') ? snapshotsRepoUrl : releasesRepoUrl
            
            credentials {
                username = findProperty('ossrhUsername') ?: System.getenv("OSSRH_USERNAME")
                password = findProperty('ossrhPassword') ?: System.getenv("OSSRH_PASSWORD")
            }
        }
    }
}

// Signing configuration for Maven Central
signing {
    required { !version.endsWith('SNAPSHOT') && gradle.taskGraph.hasTask("publish") }
    sign publishing.publications.mavenJava
}

// NOTE: Removed redundant sourcesJar and javadocJar tasks
// as they are already provided by java.withJavadocJar() and java.withSourcesJar()

artifacts {
}
